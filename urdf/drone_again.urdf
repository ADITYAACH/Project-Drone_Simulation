<?xml version="1.0"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="drone_again">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.0017017 0.0018936 0.24906"
        rpy="0 0 0" />
      <mass
        value="121.76" />
      <inertia
        ixx="27.393"
        ixy="0.00020527"
        ixz="-0.0029529"
        iyy="28.725"
        iyz="0.0020718"
        izz="51.537" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/base_link.STL" />
      </geometry>
      <material
        name="red">
        <color
          rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="fan3">
    <inertial>
      <origin
        xyz="-6.705E-09 1.085E-09 -0.00011192"
        rpy="0 0 0" />
      <mass
        value="1.0374" />
      <inertia
        ixx="0.077898"
        ixy="0.0029518"
        ixz="3.7935E-09"
        iyy="0.0019155"
        iyz="5.4394E-09"
        izz="0.079419" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan3.STL" />
      </geometry>
      <material
        name="yellow">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan3.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="fan3_joint"
    type="continuous">
    <origin
      xyz="0.85056 0.84991 0.36599"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="fan3" />
    <axis
      xyz="0 0 1" />
  </joint>
  <link
    name="fan4">
    <inertial>
      <origin
        xyz="-6.705E-09 1.085E-09 -0.00011192"
        rpy="0 0 0" />
      <mass
        value="1.0374" />
      <inertia
        ixx="0.077898"
        ixy="0.0029518"
        ixz="3.8019E-09"
        iyy="0.0019155"
        iyz="5.4639E-09"
        izz="0.079419" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan4.STL" />
      </geometry>
      <material
        name="yellow">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan4.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="fan4_joint"
    type="continuous">
    <origin
      xyz="0.85056 -0.84715 0.36599"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="fan4" />
    <axis
      xyz="0 0 1" />
  </joint>
  <link
    name="fan1">
    <inertial>
      <origin
        xyz="-6.705E-09 1.085E-09 -0.00011192"
        rpy="0 0 0" />
      <mass
        value="1.0374" />
      <inertia
        ixx="0.077898"
        ixy="0.0029518"
        ixz="3.7948E-09"
        iyy="0.0019155"
        iyz="5.4443E-09"
        izz="0.079419" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan1.STL" />
      </geometry>
      <material
        name="yellow">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan1.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="fan1_joint"
    type="continuous">
    <origin
      xyz="-0.8465 -0.84715 0.36599"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="fan1" />
    <axis
      xyz="0 0 1" />
  </joint>
  <link
    name="fan2">
    <inertial>
      <origin
        xyz="-6.705E-09 1.085E-09 -0.00011192"
        rpy="0 0 0" />
      <mass
        value="1.0374" />
      <inertia
        ixx="0.077898"
        ixy="0.0029518"
        ixz="3.7935E-09"
        iyy="0.0019155"
        iyz="5.4394E-09"
        izz="0.079419" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan2.STL" />
      </geometry>
      <material
        name="yellow">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find drone_simulation)/meshes/fan2.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="fan2_joint"
    type="continuous">
    <origin
      xyz="-0.8465 0.84991 0.36599"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="fan2" />
    <axis
      xyz="0 0 1" />
  </joint>
  <!-- <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so"> -->
      <!-- <parameters>$(find drone_simulation)/config/drone_again.yaml</parameters> -->
    <!-- </plugin>
  </gazebo> -->
  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="fan1">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="fan2">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="fan3">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="fan4">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <!-- RGB Camera -->
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000016667" ixy="0.0" ixz="0.0" iyy="0.000016667" iyz="0.0" izz="0.000016667"/>
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0.38 -0.025 0.36599" rpy="0 0 0"/> <!-- Angled slightly downward -->
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.000000333" ixy="0.0" ixz="0.0" iyy="0.000000333" iyz="0.0" izz="0.000000333"/>
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <origin xyz="0 0 0.24906" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>

  <!-- GPS -->
  <link name="gps_link">
    <visual>
      <geometry>
        <cylinder radius="0.0" length="0.0"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.0" length="0.0"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.000002083" ixy="0.0" ixz="0.0" iyy="0.000002083" iyz="0.0" izz="0.00000125"/>
    </inertial>
  </link>

  <joint name="gps_joint" type="fixed">
    <origin xyz="0 0 0.5" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="gps_link"/>
  </joint>

  <!-- Depth Camera -->
  <link name="depth_camera_link">
    <visual>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
      <material name="purple"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000016667" ixy="0.0" ixz="0.0" iyy="0.000016667" iyz="0.0" izz="0.000016667"/>
    </inertial>
  </link>

  <joint name="depth_camera_joint" type="fixed">
    <origin xyz="0.38 0.025 0.36599" rpy="0 0 0"/> <!-- Next to RGB camera, angled slightly downward -->
    <parent link="base_link"/>
    <child link="depth_camera_link"/>
  </joint>

  <!-- LiDAR -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="0.0" length="0.0"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.0" length="0.0"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.000416667" ixy="0.0" ixz="0.0" iyy="0.000416667" iyz="0.0" izz="0.000625"/>
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <origin xyz="0 0 0.53" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="lidar_link"/>
  </joint>

  <!-- Gazebo plugin for sensors -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>drone/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <gazebo reference="gps_link">
    <sensor name="gps" type="gps">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="gps_plugin" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <namespace>/gps</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="depth_camera_link">
    <sensor name="depth_camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>depth_camera</cameraName>
        <imageTopicName>depth/image_raw</imageTopicName>
        <cameraInfoTopicName>depth/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_depth</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>depth_camera_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="lidar_link">
    <sensor type="ray" name="lidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799</min_angle>
            <max_angle>0.261799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/lidar</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="depth_camera_link">
    <material>Gazebo/Orange</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="lidar_link">
    <material>Gazebo/Blue</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="gps_link">
    <material>Gazebo/Yellow</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="imu_link">
    <material>Gazebo/Green</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
</robot>
